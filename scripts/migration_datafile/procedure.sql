DECLARE
vID_MIGRATION NUMBER(2) :='';
vS_DIRECTORY VARCHAR2(50) :='';
vD_DIRECOTRY VARCHAR2(50) :='';
vS_DATABASE_LINK VARCHAR2(30) :='';
vFL_LOCK NUMBER(4) :='';
vNR_LOCK_FILES NUMBER(1) :='';
BEGIN

	--Generate lock value
	SELECT TRUNC(DBMS_RANDOM.value(1,10000)) INTO vFL_LOCK FROM DUAL;
	--GET CONFIG
	SELECT ID_MIGRATION, S_DIRECTORY,D_DIRECTORY, S_DATABASE_LINK,NR_LOCK_FILES  INTO vID_MIGRATION,vS_DIRECTORY,vD_DIRECOTRY,vS_DATABASE_LINK,vNR_LOCK_FILES FROM CONTROL_MIGRATION where ID_MIGRATION = (SELECT MAX(ID_MIGRATION) FROM CONTROL_MIGRATION);

	FOR C_M_LOCK_DATA IN (SELECT S_FILE_NAME S_FILE_NAME, D_FILE_NAME D_FILE_NAME FROM CONTROL_MIGRATION_FILE WHERE ID_MIGRATION = vID_MIGRATION AND FL_STAT=0 AND FL_LOCK = 0 AND ROWNUM < vNR_LOCK_FILES)
		LOOP

			UPDATE CONTROL_MIGRATION_FILE SET FL_LOCK=vFL_LOCK WHERE ID_MIGRATION=vID_MIGRATION AND D_FILE_NAME=C_M_LOCK_DATA.D_FILE_NAME AND FL_STAT=0;
			COMMIT;	
			
		END LOOP;

	FOR C_M_FILE IN (SELECT S_FILE_NAME S_FILE_NAME, D_FILE_NAME D_FILE_NAME FROM CONTROL_MIGRATION_FILE WHERE ID_MIGRATION = vID_MIGRATION AND FL_STAT=0 AND FL_LOCK=vFL_LOCK)
		LOOP

			UPDATE CONTROL_MIGRATION_FILE SET FL_STAT=9 WHERE ID_MIGRATION=vID_MIGRATION AND D_FILE_NAME=C_M_FILE.D_FILE_NAME;
			COMMIT;
			INSERT INTO CONTROL_MIGRATION_LOG VALUES(vID_MIGRATION,SYSDATE,NULL,C_M_FILE.D_FILE_NAME);
			COMMIT;

			DBMS_FILE_TRANSFER.get_file(
   			source_directory_object      => vS_DIRECTORY,
   			source_file_name             => C_M_FILE.S_FILE_NAME,
   			source_database              => vS_DATABASE_LINK,
   			destination_directory_object => vD_DIRECOTRY,
   			destination_file_name        => C_M_FILE.D_FILE_NAME);

			UPDATE CONTROL_MIGRATION_LOG SET DT_END=SYSDATE WHERE ID_MIGRATION = vID_MIGRATION AND D_FILE_NAME=C_M_FILE.D_FILE_NAME;
			COMMIT;
			UPDATE CONTROL_MIGRATION_FILE SET FL_STAT=1,FL_LOCK=0 WHERE ID_MIGRATION=vID_MIGRATION AND D_FILE_NAME=C_M_FILE.D_FILE_NAME AND  FL_LOCK=vFL_LOCK;
			COMMIT;

		END LOOP;





END;
/
